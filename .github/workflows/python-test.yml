# This workflow will install Python dependencies, run tests and lint with a variety of Python versions
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: Unit tests

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.10"]

    steps:
    - uses: actions/checkout@v3

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install poetry
      uses: Gr1N/setup-poetry@v8
      with:
        poetry-version: "1.3.2"
    - name: Cache poetry
      id: cached-poetry-dependencies
      uses: actions/cache@v3
      with:
        path: ~/.cache/pypoetry/virtualenvs
        key: ${{ runner.os }}-poetry-${{ hashFiles('poetry.lock') }}-python-${{ matrix.python-version }}
    - run: poetry --version

    - name: Install dependencies
      run: poetry install

    - name: Test with pytest
      run: |
        poetry run pytest --cov=dash_down --junitxml=junit/test-results-${{ matrix.python-version }}.xml --cov-report=xml tests
    - name: Upload pytest test results
      uses: actions/upload-artifact@v3
      with:
        name: pytest-results-${{ matrix.python-version }}
        path: junit/test-results-${{ matrix.python-version }}.xml
        # Use always() to always run this step to publish test results when there are test failures
      if: ${{ always() }}

    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v2